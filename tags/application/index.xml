<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>application on Haiku Project</title><link>https://www.haiku-os.org/tags/application/</link><description>Recent content in application on Haiku Project</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>2001-2021 Haiku Inc.</copyright><lastBuildDate>Fri, 19 Oct 2018 22:37:00 +0000</lastBuildDate><atom:link href="https://www.haiku-os.org/tags/application/index.xml" rel="self" type="application/rss+xml"/><item><title>Application Patterns</title><link>https://www.haiku-os.org/development/apps-patterns/</link><pubDate>Fri, 19 Oct 2018 22:37:00 +0000</pubDate><guid>https://www.haiku-os.org/development/apps-patterns/</guid><description>There are several common patterns or approaches that you will use when developing Haiku native applications. These are listed below:
These tutorials were created by DarkWyrm unless otherwise stated.
Using the Layout API [PDF] - by waddlesplash Using attributes in your application [PDF] Using attributes in Queries[PDF] Monitoring the File System with the StorageKit [PDF] Registering a new file type [PDF] Using fonts [PDF] Creating a new UI Control [PDF] Using application scripting [PDF] Adding scripting to your applications [PDF] Enabling Drag &amp;amp; Drop [PDF] Exposing re-usable parts of your application with Replicants [PDF] Tutorial Project: Create a text editor [PDF]</description></item><item><title>Prepare for Publishing</title><link>https://www.haiku-os.org/development/apps-prepare/</link><pubDate>Fri, 19 Oct 2018 22:31:00 +0000</pubDate><guid>https://www.haiku-os.org/development/apps-prepare/</guid><description>The are many tasks you should look in to before publishing your new or latest application.
Translating your application using catkeys files Create an icon for your application</description></item><item><title>To Create or Contribute?</title><link>https://www.haiku-os.org/development/apps-tocreate/</link><pubDate>Fri, 19 Oct 2018 22:21:00 +0000</pubDate><guid>https://www.haiku-os.org/development/apps-tocreate/</guid><description>When you spot a need for an application it is tempting to create a new one from scratch. The HaikuArchives contains many projects that were started as an idea, and then fell out of use.
To minimise code waste and maximise re-use, you should consider finding a project that aligns with your goals, and adding your own new feature enhancements to it, rather than default to create Yet Another Application.</description></item><item><title>Deskbar rewrite</title><link>https://www.haiku-os.org/blog/stippi/2011-04-07_deskbar_rewrite/</link><pubDate>Thu, 07 Apr 2011 10:24:29 +0000</pubDate><guid>https://www.haiku-os.org/blog/stippi/2011-04-07_deskbar_rewrite/</guid><description>&lt;p>
In recent times I have become much less of a BeOS/Haiku full time user and regularily use other systems such as Ubuntu, Windows 7, and sometimes even Mac OS X Leopard. After my very recent blog post on my impressions of the GNOME 3 Shell, I've narrowed down some ideas floating in my head about how Deskbar could be changed to improve it's usability. Let me list some things I like or hate in other desktops.
&lt;/p></description></item><item><title>My GSOC Application: Implement ext2/3 Read and Write Support for Haiku</title><link>https://www.haiku-os.org/blog/jvff/2010-04-28_my_gsoc_application_implement_ext23_read_and_write_support_haiku/</link><pubDate>Wed, 28 Apr 2010 01:04:58 +0000</pubDate><guid>https://www.haiku-os.org/blog/jvff/2010-04-28_my_gsoc_application_implement_ext23_read_and_write_support_haiku/</guid><description>&lt;p>Haiku currently has ext2 read-only support. My project is to extend the code to allow for full ext3 support. The code will be MIT licensed and will be object-oriented (inspired by Haiku&amp;rsquo;s BFS implementation), allowing for easy understanding, learning and maintainability.&lt;/p>
&lt;p>The full Google Summer of Code application follows:&lt;/p></description></item></channel></rss>