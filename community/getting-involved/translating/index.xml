<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Translating on Haiku Project</title><link>https://www.haiku-os.org/community/getting-involved/translating/</link><description>Recent content in Translating on Haiku Project</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>2001-2021 Haiku Inc.</copyright><lastBuildDate>Fri, 17 Apr 2015 14:55:45 +0000</lastBuildDate><atom:link href="https://www.haiku-os.org/community/getting-involved/translating/index.xml" rel="self" type="application/rss+xml"/><item><title>Localizing an application</title><link>https://www.haiku-os.org/community/getting-involved/translating/3rdparty/</link><pubDate>Thu, 14 May 2015 08:20:35 +0000</pubDate><guid>https://www.haiku-os.org/community/getting-involved/translating/3rdparty/</guid><description>Depending on the kind of application, localization can become much more than having the strings that appear in the GUI available in different languages. If you came to learn about those more in-depth techniques, dealing with formatting and using ICU etc., this isn't the article you seek... This article discusses the relatively simple problem of localizing an app's GUI strings.
1. Changes to the source code The needed changes to the source code are minimal.</description></item></channel></rss>